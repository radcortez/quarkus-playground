quarkus.http.port=8080
quarkus.console.color=true
quarkus.swagger-ui.always-include=true

# Logging
quarkus.log.console.enable=true
quarkus.log.console.format=%d{yyyy-MM-dd HH:mm:ss} %-5p [%c{3.}]] (%t) %s%e%n
quarkus.log.console.level=DEBUG

# Database
quarkus.datasource.db-kind=postgresql
quarkus.flyway.migrate-at-start=true
quarkus.hibernate-orm.database.generation=none

%prod.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/database
%prod.quarkus.datasource.username=database
%prod.quarkus.datasource.password=password
%prod.quarkus.datasource.jdbc.driver=org.postgresql.Driver
%prod.quarkus.datasource.jdbc.telemetry=true

%test.quarkus.datasource.db-kind=h2
%test.quarkus.datasource.jdbc.url=jdbc:h2:mem:test;MODE=PostgreSQL;DB_CLOSE_DELAY=-1
%test.quarkus.datasource.username=
%test.quarkus.datasource.password=
%test.quarkus.datasource.jdbc.driver=
%test.quarkus.hibernate-orm.log.sql=true

# Security
mp.jwt.verify.publickey.location=publicKey.pem
mp.jwt.verify.issuer=https://konoha.books.com
smallrye.jwt.sign.key.location=privateKey.pem

# Clients
number-api/mp-rest/url=http://localhost:8090

# Messaging
%test.quarkus.kafka.devservices.enabled=false
%prod.kafka.bootstrap.servers=localhost:9092
mp.messaging.outgoing.fallback.connector=smallrye-kafka
%test.mp.messaging.outgoing.fallback.connector=smallrye-in-memory
mp.messaging.outgoing.fallback.value.serializer=io.quarkus.kafka.client.serialization.JsonbSerializer
mp.messaging.outgoing.fallback.topic=books-fallback

mp.messaging.incoming.books-fallback.connector=smallrye-kafka
%test.mp.messaging.incoming.books-fallback.connector=smallrye-in-memory
mp.messaging.incoming.books-fallback.value.deserializer=com.radcortez.quarkus.playground.services.book.client.BookDeserializer
mp.messaging.incoming.books-fallback.auto.offset.reset=earliest
mp.messaging.incoming.books-fallback.enable.auto.commit=true
mp.messaging.incoming.books-fallback.tracing-enabled=true

# K8s
# Override ready because of https://github.com/smallrye/smallrye-reactive-messaging/issues/768
quarkus.smallrye-health.readiness-path=/live
quarkus.native.additional-build-args=-H:ResourceConfigurationFiles=resources-config.json
quarkus.container-image.registry=docker-registry:5000
quarkus.container-image.insecure=true
quarkus.container-image.tag=latest
quarkus.kubernetes.service-type=LoadBalancer
quarkus.kubernetes.ports."http".host-port=${quarkus.http.port}
quarkus.kubernetes.ports."http".container-port=${quarkus.http.port}
quarkus.kubernetes.env-vars.quarkus-datasource-jdbc-url.value=jdbc:postgresql://database:5432/database
quarkus.kubernetes.env-vars.number-api-mp-rest-url.value=http://number-api:8090/
quarkus.kubernetes.env-vars.kafka-bootstrap-servers.value=kafka:9092
